name: "rw-terraform-plan-01"

on:
  workflow_call:
    inputs:
      path:
        description: "Specify the path of the root Terraform module"
        required: true
        type: string
      tf_version:
        description: "Specify the version of the terraform to use"
        required: true
        type: string
      bucket:
        description: "S3 bucket for Terraform state"
        required: true
        type: string
      key:
        description: "Terraform state file key"
        required: true
        type: string
      region:
        description: "AWS region for backend"
        required: true
        type: string
      dynamodb_table:
        description: "DynamoDB table for state locking"
        required: true
        type: string
      # github_environment:
      #   description: 'specify the github environment'
      #   required: true
      #   type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_environment}}
    defaults:
      run:
        shell: bash
        working-directory: ${{inputs.path}}
      
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.tf_version }}
      
      - name: Terraform Init with AWS S3 Backend
        run: |
          terraform init \
            -backend-config="bucket=${{ inputs.bucket }}" \
            -backend-config="key=${{ inputs.key }}" \
            -backend-config="region=${{ inputs.region }}" \
            -backend-config="dynamodb_table=${{ inputs.dynamodb_table }}"

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan-artifact
          path: "${{ inputs.path }}/plan.tfplan"
          retention-days: 5
      